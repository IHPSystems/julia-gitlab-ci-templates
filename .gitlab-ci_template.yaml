.gitlab.redirect_git_for_ci_server_host:
  before_script:
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = git@${CI_SERVER_HOST}:" >> ~/.gitconfig
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = https://${CI_SERVER_HOST}/" >> ~/.gitconfig

.julia:1.0:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.0

.julia:1.1:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.1

.julia:1.2:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.2

.julia:1.3:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.3

.julia:1.4:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.4

.julia:1.5:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.5

.julia:1.6:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.6

.julia:1.7:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.7

.julia.build:
  stage: build
  script:
    - julia --project -e 'using Pkg; Pkg.build()'

.julia.test.coverage:
  script:
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        cl, tl = get_summary(process_folder())
        @info "($(cl/tl*100)%) covered"
      '

.julia.test:
  stage: test
  script:
    - julia --project -e 'using Pkg; Pkg.test(; coverage = true)'
    - !reference [.julia.test.coverage, script]

.julia.test.with_threads:
  stage: test
  script:
    - |
      julia --project -e '
        using Pkg
        @static if VERSION >= v"1.5"
          Pkg.test(; coverage = true, julia_args = ["--threads=auto"])
        else
          ENV["JULIA_NUM_THREADS"] = Sys.CPU_THREADS
          Pkg.test(; coverage = true)
        end
      '
    - !reference [.julia.test.coverage, script]

.julia.test.with_reports:
  stage: test
  script:
    - |
      julia --project -e '
        using Pkg
        Pkg.instantiate()
        Pkg.add("TestReports")
        using TestReports
        TestReports.test(; coverage = true)
      '
    - !reference [.julia.test.coverage, script]
  artifacts:
    when: always
    reports:
      junit: '**/testlog.xml'

.julia.test.with_threads.with_reports:
  stage: test
  script:
    - |
      julia --project -e '
        using Pkg
        Pkg.instantiate()
        Pkg.add("TestReports")
        using TestReports
        @static if VERSION >= v"1.5"
          TestReports.test(; coverage = true, julia_args = ["--threads=auto"])
        else
          ENV["JULIA_NUM_THREADS"] = Sys.CPU_THREADS
          TestReports.test(; coverage = true)
        end
      '
    - !reference [.julia.test.coverage, script]
  artifacts:
    when: always
    reports:
      junit: '**/testlog.xml'
