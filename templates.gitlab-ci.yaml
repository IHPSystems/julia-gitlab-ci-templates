variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"

.gitlab.redirect_git_for_ci_server_host:
  before_script:
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = git@${CI_SERVER_HOST}:" >> ~/.gitconfig
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = https://${CI_SERVER_HOST}/" >> ~/.gitconfig

.julia:1:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1

.julia:1.0:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.0

.julia:1.1:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.1

.julia:1.2:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.2

.julia:1.3:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.3

.julia:1.4:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.4

.julia:1.5:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.5

.julia:1.6:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.6

.julia:1.7:
  extends:
    - .gitlab.redirect_git_for_ci_server_host
  image: julia:1.7

.julia.version:
  script:
    - julia --version

.julia.cache: &julia_cache_template
  cache:
    key: $CI_COMMIT_REF_SLUG-julia
    paths:
     - .julia/artifacts/
     - .julia/packages/
     - .julia/registries/

variables:
  JULIA_PROJECT_PATH: '@.'

.julia.build:
  stage: build
  script:
    - !reference [.julia.version, script]
    - cd $JULIA_PROJECT_PATH
    - julia --project -e 'using Pkg; Pkg.build()'
  <<: *julia_cache_template

.julia.test:
  stage: test
  variables:
    JULIA_TEST_WITH_THREADS: true
    JULIA_TEST_WITH_REPORTS: true
  script:
    - !reference [.julia.version, script]
    - cd $JULIA_PROJECT_PATH
    - |
      julia --project -e '
        @info """
          Testing...
          JULIA_TEST_WITH_THREADS: $(ENV["JULIA_TEST_WITH_THREADS"])
          JULIA_TEST_WITH_REPORTS: $(ENV["JULIA_TEST_WITH_REPORTS"])
          Sys.CPU_THREADS: $(Sys.CPU_THREADS)
        """
        using Pkg
        if parse(Bool, ENV["JULIA_TEST_WITH_REPORTS"])
          Pkg.add("TestReports")
          using TestReports
        end
        if !parse(Bool, ENV["JULIA_TEST_WITH_THREADS"]) || VERSION < v"1.5"
          if parse(Bool, ENV["JULIA_TEST_WITH_THREADS"])
            ENV["JULIA_NUM_THREADS"] = Sys.CPU_THREADS
          end
          if !parse(Bool, ENV["JULIA_TEST_WITH_REPORTS"])
            Pkg.test(; coverage = true)
          else
            TestReports.test(; coverage = true)
          end
        else
          if !parse(Bool, ENV["JULIA_TEST_WITH_REPORTS"])
            Pkg.test(; coverage = true, julia_args = ["--threads=auto"])
          else
            TestReports.test(; coverage = true, julia_args = ["--threads=auto"])
          end
        end
      '
    - |
      julia -e '
        using Pkg
        Pkg.add("Coverage")
        using Coverage
        cl, tl = get_summary(process_folder())
        @info "($(cl/tl*100)%) covered"
      '
  <<: *julia_cache_template
  artifacts:
    when: always
    reports:
      junit: '**/testlog.xml'
