stages:
  - build
  - test

.julia.linux:
  before_script:
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = git@${CI_SERVER_HOST}:" >> ~/.gitconfig
    - echo -e "[url \"https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/\"]\n\tinsteadOf = https://${CI_SERVER_HOST}/" >> ~/.gitconfig

.julia:1.0:
  extends:
    - .julia.linux
  image: julia:1.0-buster

.julia:1.3:
  extends:
    - .julia.linux
  image: julia:1.3-buster

.julia:1.6:
  extends:
    - .julia.linux
  image: julia:1.6-buster

.julia:1.7:
  extends:
    - .julia.linux
  image: julia:1.7-buster

.julia.build:
  stage: build
  script:
    - julia --project -e 'using Pkg; Pkg.build()'

.julia.test.coverage:
  script:
    - julia -e 'using Pkg; Pkg.add("Coverage");
      using Coverage; cl, tl = get_summary(process_folder());
      println("(", cl/tl*100, "%) covered")'

.julia.test:
  stage: test
  script:
    - julia --project -e 'using Pkg; Pkg.test(; coverage = true)'
    - !reference [.julia.test.coverage, script]

.julia.test.with_threads:
  stage: test
  script:
    - julia --project -e 'using Pkg; Pkg.test(; coverage = true, julia_args = ["--threads=auto"])'
    - !reference [.julia.test.coverage, script]

.julia.test.with_reports:
  stage: test
  script:
    - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.add("TestReports"); using TestReports; TestReports.test(; coverage = true)'
    - !reference [.julia.test.coverage, script]
  artifacts:
    when: always
    reports:
      junit: '**/testlog.xml'

.julia.test.with_threads.with_reports:
  stage: test
  script:
    - julia --project -e 'using Pkg; Pkg.instantiate(); Pkg.add("TestReports"); using TestReports; TestReports.test(; coverage = true, julia_args = ["--threads=auto"])'
    - !reference [.julia.test.coverage, script]
  artifacts:
    when: always
    reports:
      junit: '**/testlog.xml'
